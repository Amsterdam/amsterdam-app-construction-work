[uwsgi]
strict = true               ; fail to start if any parameter isn’t explicitly understood by uWSGI.
http-socket = localhost:8000
chdir = /code
plugins = python3
module = main_application.wsgi
static-map = /static=/code/static
post-buffering = 1          ; Enable post buffering to avoid errors caused by large request bodies
buffer-size = 32768         ; Set the buffer size for requests
master = true               ; necessary to gracefully re-spawn and pre-fork worker
processes = 6               ; spawn the specified number of workers/processes
threads = 3                 ; run each worker in pre-threaded mode with the specified number of threads
uid = root
gid = root
harakiri = 10               ; set harakiri timeout
die-on-term = true          ; Shutdown when receiving SIGTERM (default is respawn)
max-requests = 5000         ; Restart workers after this many requests
max-worker-lifetime = 3600  ; Restart workers after this many seconds
reload-on-rss = 4096        ; Restart workers after this much resident memory
worker-reload-mercy = 60    ; How long to wait before forcefully killing workers
listen = 1024               ; set the socket listen queue size
vacuum = true               ; Delete sockets during shutdown
enable-threads = true       ; uWSGI disables Python threads by default
offload-threads = 1         ; Enable offloading of work to a separate thread
log-x-forwarded-for = true  ; Log the X-Forwarded-For header for requests
single-interpreter = false  ; uWSGI will not change the whole ThreadState (Python structure) at every request
need-app = true             ; prevents uWSGI from starting if it is unable load the application module
disable-logging = false     ; Disable uWSGI’s standard logging if the application emits concise and meaningful logs
log-4xx = true              ; ensure that critical errors are always logged
log-5xx = true              ; ensure that critical errors are always logged




