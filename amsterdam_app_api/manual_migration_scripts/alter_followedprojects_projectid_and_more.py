""" Generated by Django 4.1.2 on 2023-05-08 15:46

    Manually added cleanup methods for DB consistency
"""

from django.db import migrations, models
import django.db.models.deletion


def remove_orphaned_news(apps, schema_editor):
    """ Remove news for DB consistency """
    Projects = apps.get_model('amsterdam_app_api', 'Projects')
    News = apps.get_model('amsterdam_app_api', 'News')

    for news in News.objects.all():
        if not Projects.objects.filter(identifier=news.project_identifier_id).exists():
            news.delete()


def remove_orphaned_followed_projects(apps, schema_editor):
    """ Remove followed_projects for DB consistency """
    Projects = apps.get_model('amsterdam_app_api', 'Projects')
    FollowedProjects = apps.get_model('amsterdam_app_api', 'FollowedProjects')

    for followed_project in FollowedProjects.objects.all():
        if not Projects.objects.filter(identifier=followed_project.project_identifier_id).exists():
            followed_project.delete()


class Migration(migrations.Migration):
    """ Create migration for changed fields """
    dependencies = [
        ('amsterdam_app_api', '0002_alter_news_id'),
    ]

    operations = [
        migrations.RunPython(remove_orphaned_news),
        migrations.RunPython(remove_orphaned_followed_projects),
        migrations.AlterField(
            model_name='followedprojects',
            name='projectid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amsterdam_app_api.projects'),
        ),
        migrations.AlterField(
            model_name='news',
            name='project_identifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amsterdam_app_api.projects'),
        ),
        migrations.AlterField(
            model_name='news',
            name='title',
            field=models.CharField(blank=True, db_index=True, default='', max_length=1000),
        ),
        migrations.AlterField(
            model_name='notification',
            name='project_identifier',
            field=models.OneToOneField(
                default='',
                on_delete=django.db.models.deletion.CASCADE,
                to='amsterdam_app_api.projects'
            ),
        ),
        migrations.AlterField(
            model_name='projectdetails',
            name='active',
            field=models.BooleanField(blank=True, db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='projectdetails',
            name='identifier',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                primary_key=True,
                serialize=False,
                to='amsterdam_app_api.projects'
            ),
        ),
        migrations.AlterField(
            model_name='projectdetails',
            name='subtitle',
            field=models.CharField(db_index=True, max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='projectdetails',
            name='title',
            field=models.CharField(blank=True, db_index=True, default='', max_length=1000),
        ),
        migrations.AlterField(
            model_name='projects',
            name='active',
            field=models.BooleanField(blank=True, db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='projects',
            name='subtitle',
            field=models.CharField(db_index=True, max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='projects',
            name='title',
            field=models.CharField(blank=True, db_index=True, default='', max_length=1000),
        ),
        migrations.AlterField(
            model_name='warningmessages',
            name='project_identifier',
            field=models.OneToOneField(
                default='',
                on_delete=django.db.models.deletion.CASCADE,
                to='amsterdam_app_api.projects'
            ),
        ),
        migrations.AlterField(
            model_name='warningmessages',
            name='title',
            field=models.CharField(db_index=True, max_length=1000),
        ),
    ]
