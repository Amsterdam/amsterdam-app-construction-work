trigger: none
    
pool:
  vmImage: ubuntu-latest

variables:
- group: Python Django Variables
- name: imageName
  value: construction-work
- name: tag
  value: $(imageName)-unittest
- name: unittestPassed
  value: false

steps:
- script: |
    export PYTHONPATH=$(Build.SourcesDirectory)
    echo "$(Build.SourcesDirectory)"
    cd $(Build.SourcesDirectory)
    echo "Whoami? `whoami`"
    sudo apt update && sudo apt install pylint
    echo "Create virtual environment"
    python3 -m venv venv
    echo "Activating virtual environment"
    . venv/bin/activate
    echo "Installing extra python packages (besides the requirements.txt)"
    python -m pip install pylint_django
    echo "Installing extra python packages"
    python -m pip install -r requirements.txt
    echo "Starting pylinter"
    pylint --rcfile ./.pylintrc $(find . -name '*.py' | grep -v -e venv -e migrations -e kladblok) && echo "##vso[task.setvariable variable=pylintPassed;]true"
  displayName: 'Running pylint'

- script: |    
    if [ $(pylintPassed) == 'false' ]; then
      exit 1
    fi
  displayName: 'Fail if code has been rated less then 10.0'

- task: DownloadSecureFile@1
  displayName: 'Download fcm_credentials.json'
  name: fcm_credentials
  inputs:
    secureFile: fcm_credentials.json

- script: |   
    echo 'Building docker container with tag: $(tag)'
    docker build -f $(Build.SourcesDirectory)/Dockerfile -t $(tag) .
  displayName: 'Build docker image'

- script: |
    export fcm_credential_path=$(fcm_credentials.secureFilePath)
    export env_path=$(Build.SourcesDirectory)/.env-unittest
    mkdir $(Agent.BuildDirectory)/database
    export database_path=$(Agent.BuildDirectory)/database
    docker-compose -f docker-compose-unittest.yml --env-file ${env_path} run --rm $(imageName) && echo "##vso[task.setvariable variable=unittestPassed;]true"
  displayName: 'Run UnitTests'

# Handling the  result needs to be in a different step because only then variable wil be expanded
# See: https://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#macro-syntax-variables
- script: |    
    if [ $(unittestPassed) == 'false' ]; then
      exit 1
    fi    
  displayName: 'Fail pipeline if unittest result is false'